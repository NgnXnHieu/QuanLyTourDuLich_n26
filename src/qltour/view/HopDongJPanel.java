/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package qltour.view;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;

import java.awt.Checkbox;
import java.awt.Color;
import java.util.ArrayList;

import javax.swing.border.LineBorder;
import javax.swing.JScrollPane;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import qltour.check_loi.check_Loi;
import qltour.managedata.IO;
import qltour.model.HopDong;
import qltour.model.KhachHang;
import qltour.model.Tour;

import javax.swing.SwingConstants;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.SystemColor;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.border.CompoundBorder;
import javax.swing.JComboBox;
import javax.swing.JDialog;

import java.awt.Component;
import java.awt.Dialog;

import javax.swing.JTextField;
import javax.swing.JRadioButton;
import javax.swing.JScrollBar;
import javax.swing.JButton;
import javax.swing.ButtonGroup;
import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import java.awt.Font;
import javax.swing.JPanel;

public class HopDongJPanel extends javax.swing.JPanel {
	private JTable table;
	static IO o = new IO();
	ArrayList<HopDong> listHD = new ArrayList<HopDong>();
//	private DefaultTableModel defaultTableModel;
	private JTextField tf_MHD;
	private JTextField tf_NgayLap;
	private ArrayList<KhachHang> listKH;
	private ArrayList<Tour> listTour;
	private JButton btnAdd;
	private JButton btnXoa;
	private JButton btnSua;
	private JRadioButton RB1;
	private JRadioButton RB2;
	private JComboBox comboBox_MKH;
	private JComboBox comboBox_MaTour;
	private JDialog edit_jDialog;
	private JLabel lb1;
	private JLabel lb2;
	private JLabel lb3;
	private JLabel lb4;
	private JLabel lb5;
	private JTextField tf1,tf2;
	
	private final ButtonGroup buttonGroup = new ButtonGroup();
	private JLabel lblNewLabel;

    public HopDongJPanel() {
        initComponents();
        setTable();
    }
    private void setTable() {
    	DefaultTableModel defaultTableModel = new DefaultTableModel();
    	table.setBackground(new Color(204, 255, 255));
        table.setModel(defaultTableModel);
        ListSelectionModel listSelectionModel = table.getSelectionModel();
        listSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        defaultTableModel.addColumn("STT");
        defaultTableModel.addColumn("Mã hợp đồng");
        defaultTableModel.addColumn("Mã tour");
        defaultTableModel.addColumn("Mã khách hàng");
        defaultTableModel.addColumn("Ngày lập");
        defaultTableModel.addColumn("Trạng thái thanh toán");
        listHD = o.loadData(listHD, "dsHD.dat");
        int i = 0;
        for (HopDong Hopdong : listHD) {
            i++;
            defaultTableModel.addRow(new Object[]{i,Hopdong.getID_HopDong(),Hopdong.getMaTour(),Hopdong.getMaKh(),Hopdong.getNgayLap(),Hopdong.getTrangThai()} );}
        JScrollPane jScrollPane = new JScrollPane();
        table.add(jScrollPane);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    	edit_jDialog = new JDialog();
    	table = new JTable();
        listKH =new ArrayList<KhachHang>();
        listTour =new  ArrayList<Tour>();
        lb1 = new JLabel();
        lb2 = new JLabel();
        lb3 = new JLabel();
        lb4 = new JLabel();
        lb5 = new JLabel();
        tf1 = new JTextField();

        setBackground(new Color(176, 224, 230));
        
        JScrollPane scrollPane = new JScrollPane();
        scrollPane.setBackground(new Color(153, 204, 153));
        
        JLabel lb_mahopdong = new JLabel(" Mã Hợp Đồng");
        lb_mahopdong.setFont(new Font("Tahoma", Font.PLAIN, 14));
        lb_mahopdong.setMaximumSize(new Dimension(67, 14));
        lb_mahopdong.setBorder(new LineBorder(new Color(0, 0, 0)));
        lb_mahopdong.setBackground(Color.LIGHT_GRAY);
        
        comboBox_MaTour = new JComboBox();
        comboBox_MaTour.setFont(new Font("Tahoma", Font.PLAIN, 14));
        listTour = o.loadData(listTour,"dsTour1.dat");
        for(Tour t : listTour) {
        	comboBox_MaTour.addItem(t.getID_Tour());
        }
        JLabel lb_maTour = new JLabel("    Mã Tour");
        lb_maTour.setFont(new Font("Tahoma", Font.PLAIN, 14));
        lb_maTour.setAlignmentY(Component.TOP_ALIGNMENT);
        lb_maTour.setAlignmentX(Component.RIGHT_ALIGNMENT);
        lb_maTour.setMaximumSize(new Dimension(67, 14));
        lb_maTour.setBorder(new LineBorder(new Color(0, 0, 0)));
        lb_maTour.setBackground(Color.LIGHT_GRAY);
        
        JLabel lb_KH = new JLabel("Mã Khách hàng");
        lb_KH.setFont(new Font("Tahoma", Font.PLAIN, 14));
        lb_KH.setAlignmentY(Component.BOTTOM_ALIGNMENT);
        lb_KH.setAlignmentX(Component.RIGHT_ALIGNMENT);
        lb_KH.setMaximumSize(new Dimension(67, 14));
        lb_KH.setBorder(new LineBorder(new Color(0, 0, 0)));
        lb_KH.setBackground(Color.LIGHT_GRAY);
        
        JLabel lb_NgayLap = new JLabel("    Ngày lập");
        lb_NgayLap.setFont(new Font("Tahoma", Font.PLAIN, 14));
        lb_NgayLap.setMaximumSize(new Dimension(67, 14));
        lb_NgayLap.setBorder(new LineBorder(new Color(0, 0, 0)));
        lb_NgayLap.setBackground(Color.LIGHT_GRAY);
        
        JLabel lb_Trangthai = new JLabel("   Trạng thái");
        lb_Trangthai.setFont(new Font("Tahoma", Font.PLAIN, 14));
        lb_Trangthai.setMaximumSize(new Dimension(67, 14));
        lb_Trangthai.setBorder(new LineBorder(new Color(0, 0, 0)));
        lb_Trangthai.setBackground(Color.LIGHT_GRAY);
        
        tf_MHD = new JTextField();
        tf_MHD.setFont(new Font("Tahoma", Font.PLAIN, 14));
        tf_MHD.setColumns(10);
        
        comboBox_MKH = new JComboBox();
        comboBox_MKH.setFont(new Font("Tahoma", Font.PLAIN, 14));
        listKH = o.loadData(listKH, "dsKh.dat");
        for(KhachHang kh : listKH) {
        	comboBox_MKH.addItem(kh.getID_client());
        }
     
        
        tf_NgayLap = new JTextField();
        tf_NgayLap.setFont(new Font("Tahoma", Font.PLAIN, 14));
        tf_NgayLap.setColumns(10);
        
        RB1 = new JRadioButton("Đã thanh toán");
        RB1.setFont(new Font("Tahoma", Font.PLAIN, 14));
        buttonGroup.add(RB1);
        
        RB2 = new JRadioButton("Chưa thanh toán");
        RB2.setFont(new Font("Tahoma", Font.PLAIN, 14));
        buttonGroup.add(RB2);
        RB2.setSelected(true);
        
        table.addMouseListener(new MouseListener() {
			
			@Override
			public void mouseReleased(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mousePressed(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mouseExited(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mouseEntered(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mouseClicked(MouseEvent e) {
				// TODO Auto-generated method stub
				tf_MHD.setText(listHD.get(table.getSelectedRow()).getID_HopDong());
		    	tf_NgayLap.setText(listHD.get(table.getSelectedRow()).getNgayLap());
		    	Object tmp1 = listHD.get(table.getSelectedRow()).getMaTour();
		    	comboBox_MaTour.setSelectedItem(tmp1);;
		    	Object tmp2 = listHD.get(table.getSelectedRow()).getMaKh();
		    	comboBox_MKH.setSelectedItem(tmp2);
		    	if(listHD.get(table.getSelectedRow()).getTrangThai().compareTo("Chưa thanh toán")==0) RB2.setSelected(true);
		    	else RB1.setSelected(true);
			}
		});
        JButton btnAdd = new JButton("Thêm");
        btnAdd.setFont(new Font("Tahoma", Font.PLAIN, 14));
        btnAdd.addActionListener(new ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_jButtonActionPerformed(evt);
            }
        });
        btnXoa = new JButton("Xoá");
        btnXoa.setFont(new Font("Tahoma", Font.PLAIN, 14));
        btnXoa.addActionListener(new ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                del_jButtonActionPerformed(evt);
            }
        });
        
        btnSua = new JButton("Sửa");
        btnSua.setFont(new Font("Tahoma", Font.PLAIN, 14));

//		Color bg = new Color("pink")
//		edit_jDialog.setBackground();
//		edit_jDialog.add(lb1);
//		edit_jDialog.add(tf1);
//		edit_jDialog.add(lb2);
//		edit_jDialog.add(tf2);
//		edit_jDialog.add(lb3);
//		edit_jDialog.add(comboBox_MKH_dl);
//		edit_jDialog.add(lb4);
//		edit_jDialog.add(comboBox_MaTour_dl);
//		edit_jDialog.add(lb5);
		
//        javax.swing.GroupLayout edit_jDialogLayout = new javax.swing.GroupLayout(edit_jDialog.getContentPane());
//        edit_jDialog.getContentPane().setLayout(edit_jDialogLayout);
        btnSua.addActionListener(new ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_jButtonActionPerformed(evt);
            }
        });
        
        JPanel panel = new JPanel();
        panel.setBackground(SystemColor.inactiveCaption);
        
       

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addComponent(scrollPane, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 1021, Short.MAX_VALUE)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(79)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
        				.addComponent(lb_maTour, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        				.addComponent(lb_KH, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        				.addComponent(lb_Trangthai, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        				.addComponent(lb_NgayLap, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        				.addComponent(lb_mahopdong, GroupLayout.PREFERRED_SIZE, 95, GroupLayout.PREFERRED_SIZE))
        			.addGap(53)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
        					.addComponent(tf_NgayLap, GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
        					.addComponent(tf_MHD)
        					.addComponent(comboBox_MKH, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        					.addComponent(comboBox_MaTour, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(RB1, GroupLayout.PREFERRED_SIZE, 144, GroupLayout.PREFERRED_SIZE)
        					.addGap(35)
        					.addComponent(RB2, GroupLayout.PREFERRED_SIZE, 140, GroupLayout.PREFERRED_SIZE)))
        			.addPreferredGap(ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
        			.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        				.addComponent(btnAdd, GroupLayout.PREFERRED_SIZE, 157, GroupLayout.PREFERRED_SIZE)
        				.addComponent(btnXoa, GroupLayout.PREFERRED_SIZE, 157, GroupLayout.PREFERRED_SIZE)
        				.addComponent(btnSua, GroupLayout.PREFERRED_SIZE, 157, GroupLayout.PREFERRED_SIZE))
        			.addGap(208))
        		.addComponent(panel, GroupLayout.DEFAULT_SIZE, 1021, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(layout.createSequentialGroup()
        			.addComponent(panel, GroupLayout.PREFERRED_SIZE, 92, GroupLayout.PREFERRED_SIZE)
        			.addGap(28)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(btnAdd, GroupLayout.PREFERRED_SIZE, 55, GroupLayout.PREFERRED_SIZE)
        					.addGap(39)
        					.addComponent(btnXoa, GroupLayout.PREFERRED_SIZE, 55, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
        					.addComponent(btnSua, GroupLayout.PREFERRED_SIZE, 55, GroupLayout.PREFERRED_SIZE)
        					.addGap(16))
        				.addGroup(layout.createSequentialGroup()
        					.addGap(10)
        					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(lb_mahopdong, GroupLayout.PREFERRED_SIZE, 35, GroupLayout.PREFERRED_SIZE)
        						.addComponent(tf_MHD, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE))
        					.addGap(18)
        					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(lb_NgayLap, GroupLayout.PREFERRED_SIZE, 35, GroupLayout.PREFERRED_SIZE)
        						.addComponent(tf_NgayLap, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE))
        					.addGap(18)
        					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(lb_KH, GroupLayout.PREFERRED_SIZE, 35, GroupLayout.PREFERRED_SIZE)
        						.addComponent(comboBox_MKH, GroupLayout.PREFERRED_SIZE, 21, GroupLayout.PREFERRED_SIZE))
        					.addGap(19)
        					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(lb_maTour, GroupLayout.PREFERRED_SIZE, 35, GroupLayout.PREFERRED_SIZE)
        						.addComponent(comboBox_MaTour, GroupLayout.PREFERRED_SIZE, 21, GroupLayout.PREFERRED_SIZE))
        					.addPreferredGap(ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
        					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(lb_Trangthai, GroupLayout.PREFERRED_SIZE, 35, GroupLayout.PREFERRED_SIZE)
        						.addComponent(RB1)
        						.addComponent(RB2))))
        			.addGap(18)
        			.addComponent(scrollPane, GroupLayout.PREFERRED_SIZE, 263, GroupLayout.PREFERRED_SIZE)
        			.addGap(44))
        );
        
        lblNewLabel = new JLabel("Quản Lý Hợp Đồng");
        lblNewLabel.setFont(new Font("Tahoma", Font.PLAIN, 34));
        panel.add(lblNewLabel);
        
        
        scrollPane.setViewportView(table);
        this.setLayout(layout);
    }// </editor-fold>//GEN-END:initComponents
    private void add_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_jButtonActionPerformed
        // TODO add your handling code here:
        listHD = o.loadData(listHD, "dsHD.dat");
        String MaHD= tf_MHD.getText();
        String  MaKH=(String) comboBox_MKH.getSelectedItem()  ;
        String NgayLap= tf_NgayLap.getText();
        String trangThai="";
        if(RB1.isSelected()) trangThai="Đã thanh toán";
        else if(RB2.isSelected()) trangThai="Chưa thanh toán";
        String MaTour= (String) comboBox_MaTour.getSelectedItem();
        
        if(MaHD.isEmpty()) JOptionPane.showMessageDialog(this, "Không để trống thông tin","Lỗi",JOptionPane.ERROR_MESSAGE);
        else if(NgayLap.isEmpty()) JOptionPane.showMessageDialog(this, "Không để trống thông tin","Lỗi",JOptionPane.ERROR_MESSAGE);
        else {
        	boolean find = false;
        	for(HopDong hd : listHD) {
        		if(hd.getID_HopDong().compareTo(MaHD)==0) {
        			JOptionPane.showMessageDialog(this, "Trùng Mã Hợp Đồng","Lỗi",JOptionPane.ERROR_MESSAGE);
        			find = true ;
            		break;
        		}
        		
        	}
        	if(!find) {
        		HopDong hd= new HopDong(MaHD,MaKH , NgayLap, trangThai,MaTour);
                listHD.add(hd);
                JOptionPane.showMessageDialog(this, "Thêm thành công","Thông báo",JOptionPane.INFORMATION_MESSAGE);
                o.saveData(listHD, "dsHD.dat");
                setTable();
        	}
        }
        
    }
    
    private void del_jButtonActionPerformed(java.awt.event.ActionEvent evt) {
       if(table.getSelectedRow()<0) JOptionPane.showMessageDialog(this, "Vui lòng chọn hợp đồng cần xoá","Lỗi",JOptionPane.ERROR_MESSAGE);
       else {
    	   listHD = o.loadData(listHD, "dsHD.dat");
           int index= table.getSelectedRow();
           System.out.println(index);
           listHD.remove(index);
           o.saveData(listHD, "dsHD.dat");
           setTable();
       }
    }
    
    
    private void edit_jButtonActionPerformed(java.awt.event.ActionEvent evt) {
//    	update_view_kh_jButtonActionPerformed(evt);
    	listHD= o.loadData(listHD,"dsHD.dat");
    	String mahd ;
    	if(table.getSelectedRow()<0) JOptionPane.showMessageDialog(this, "Vui lòng chọn hợp đồng cần sửa","Lỗi",JOptionPane.ERROR_MESSAGE);
    	else {
    		mahd = listHD.get(table.getSelectedRow()).getID_HopDong();
    		boolean find= false;
        	for(HopDong hd : listHD) {
        		if(hd.getID_HopDong().compareTo(tf_MHD.getText())==0) {
        			if(tf_MHD.getText().compareTo(mahd)==0) find= false;
        			else {
        				find =true;
                        JOptionPane.showMessageDialog(this, "Không đặt trùng ID","Thông báo",JOptionPane.ERROR_MESSAGE);
        			}
        			break;
        		}
        	}
        	if(!find) {
        		listHD.get(table.getSelectedRow()).setID_HopDong(tf_MHD.getText());
            	listHD.get(table.getSelectedRow()).setMaTour((String) comboBox_MaTour.getSelectedItem()); 
            	listHD.get(table.getSelectedRow()).setMaKh((String) comboBox_MKH.getSelectedItem() );
            	listHD.get(table.getSelectedRow()).setNgayLap(tf_NgayLap.getText());
            	if(RB1.isSelected()) listHD.get(table.getSelectedRow()).setTrangThai("Đã thanh toán");
            	else listHD.get(table.getSelectedRow()).setTrangThai("Chưa thanh toán");
                JOptionPane.showMessageDialog(this, "Sửa thành công","Thông báo",JOptionPane.INFORMATION_MESSAGE);
                o.saveData(listHD, "dsHD.dat");
                setTable();
        	}
    	}
    	
    	
    }
}
